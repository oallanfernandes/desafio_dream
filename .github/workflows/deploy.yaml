name: Deploy ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECS_CLUSTER: my-ecs-cluster
  ECS_SERVICE_BACKEND: backend-service
  ECS_SERVICE_FRONTEND: frontend-service
  BACKEND_IMAGE: ${{ vars.BACKEND_ECR_URL }}:latest
  FRONTEND_IMAGE: ${{ vars.FRONTEND_ECR_URL }}:latest
  AWS_ACCOUNT_ID: 786427517403

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar credenciais AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-actions-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Login no ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Construir e enviar imagem do backend
        run: |
          docker build -t ${{ env.BACKEND_IMAGE }} ./backend
          docker push ${{ env.BACKEND_IMAGE }}

      - name: Construir e enviar imagem do frontend
        run: |
          docker build -t ${{ env.FRONTEND_IMAGE }} ./frontend
          docker push ${{ env.FRONTEND_IMAGE }}

      - name: Atualizar serviço ECS backend
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE_BACKEND }} \
            --force-new-deployment

      - name: Atualizar serviço ECS frontend
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE_FRONTEND }} \
            --force-new-deployment

      - name: Aguardar atualização do ECS
        run: |
          echo "⏳ Aguardando ECS concluir deploy..."
          aws ecs wait services-stable \
            --cluster ${{ env.ECS_CLUSTER }} \
            --services ${{ env.ECS_SERVICE_BACKEND }} ${{ env.ECS_SERVICE_FRONTEND }}
          echo "✅ Deploy concluído!"

      - name: Obter URL do Load Balancer
        id: lb
        run: |
          lb_dns=$(aws elbv2 describe-load-balancers \
            --query "LoadBalancers[0].DNSName" \
            --output text)
          echo "lb_url=http://$lb_dns" >> $GITHUB_ENV
          echo "Load Balancer URL: http://$lb_dns"

      - name: Exibir URL final do frontend
        run: |
          echo "✅ Aplicação frontend disponível em: ${{ env.lb_url }}"
